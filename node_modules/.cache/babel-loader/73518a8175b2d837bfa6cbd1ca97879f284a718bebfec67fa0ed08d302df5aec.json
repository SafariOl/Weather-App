{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { API_KEY } from './App';\nimport { images } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather({\n  location\n}) {\n  _s();\n  const dayWeek = {\n    0: 'Monday',\n    1: 'Tuesday',\n    2: 'Wednesday',\n    3: 'Thursday',\n    4: 'Friday',\n    5: 'Saturday',\n    6: 'Sunday'\n  };\n  const days = document.querySelector('.days');\n  let options2 = {\n    month: \"long\"\n  };\n  async function getNextDays() {\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`);\n      const data = await res.json();\n      for (let i = 0; i < data.list.length; i++) {\n        if (i % 6 == 0) {\n          const date = new Date(data.list[i].dt_txt);\n          let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n          days.innerHTML += `\n            <div class='day'>\n              <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n              <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\n              <div class='time'>${date.getDate()}${time}, ${dayWeek[date.getDay()]}</div>\n            </div>\n          `;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getNextDays();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastWeather, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","API_KEY","images","jsxDEV","_jsxDEV","ForecastWeather","location","_s","dayWeek","days","document","querySelector","options2","month","getNextDays","res","fetch","data","json","i","list","length","date","Date","dt_txt","time","Intl","DateTimeFormat","format","innerHTML","Math","floor","main","temp","weather","getDate","getDay","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { API_KEY } from './App'\r\nimport { images } from './App'\r\n\r\nexport default function ForecastWeather({location}) {\r\n\r\n  const dayWeek = {\r\n    0: 'Monday',\r\n    1: 'Tuesday',\r\n    2: 'Wednesday',\r\n    3: 'Thursday',\r\n    4: 'Friday',\r\n    5: 'Saturday',\r\n    6: 'Sunday'\r\n  }\r\n\r\n  const days = document.querySelector('.days')\r\n  let options2 = { month: \"long\" };\r\n\r\n  async function getNextDays() {\r\n    try{\r\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n      const data = await res.json()\r\n      for(let i = 0; i < data.list.length; i++){\r\n        if(i % 6 == 0){\r\n          const date = new Date(data.list[i].dt_txt)\r\n          let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n          days.innerHTML += `\r\n            <div class='day'>\r\n              <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n              <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\r\n              <div class='time'>${date.getDate()}${time}, ${dayWeek[date.getDay()]}</div>\r\n            </div>\r\n          `\r\n        }\r\n      }\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNextDays()\r\n  }, [location])\r\n\r\n    \r\n  return (\r\n    <div>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"days\">\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,eAAeA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAElD,MAAMC,OAAO,GAAG;IACd,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,WAAW;IACd,CAAC,EAAE,UAAU;IACb,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,UAAU;IACb,CAAC,EAAE;EACL,CAAC;EAED,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC5C,IAAIC,QAAQ,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;EAEhC,eAAeC,WAAWA,CAAA,EAAG;IAC3B,IAAG;MACD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sDAAqDV,QAAS,uBAAsBL,OAAQ,EAAC,CAAC;MACvH,MAAMgB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;QACvC,IAAGA,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;UACZ,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACN,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACK,MAAM,CAAC;UAC1C,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEf,QAAQ,CAAC,CAACgB,MAAM,CAACN,IAAI,CAAC;UAClEb,IAAI,CAACoB,SAAS,IAAK;AAC7B;AACA,kCAAkCC,IAAI,CAACC,KAAK,CAACd,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACa,IAAI,CAACC,IAAI,CAAE;AACrE,yCAAyC/B,MAAM,CAACe,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACe,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI,CAAE;AAC9E,kCAAkCV,IAAI,CAACa,OAAO,CAAC,CAAE,GAAEV,IAAK,KAAIjB,OAAO,CAACc,IAAI,CAACc,MAAM,CAAC,CAAC,CAAE;AACnF;AACA,WAAW;QACH;MACF;IACF,CAAC,QAAMC,GAAG,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF;EAEArC,SAAS,CAAC,MAAM;IACdc,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAGd,oBACEF,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxC,OAAA;MAAKyC,SAAS,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACrC,EAAA,CAlDuBF,eAAe;AAAAyC,EAAA,GAAfzC,eAAe;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}