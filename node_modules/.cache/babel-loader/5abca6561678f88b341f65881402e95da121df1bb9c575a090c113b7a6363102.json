{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API_KEY } from \".\";\nexport const getCurWeatherFunc = createAsyncThunk('src/getCurWeatherFunc', location => {\n  return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`).then(data => data.json()).then(data => data.list).catch(err => console.log(err));\n});\nconst weatherReducer = createSlice({\n  name: 'weather',\n  initialState: {\n    loading: false,\n    weather: []\n  },\n  extraReducers: builder => {\n    builder.addCase(getCurWeatherFunc.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.loading = false;\n      state.weather = [action.payload];\n    });\n    builder.addCase(getCurWeatherFunc.rejected, state => {\n      state.loading = false;\n      state.weather = [];\n    });\n  }\n});\nexport default weatherReducer.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_KEY","getCurWeatherFunc","location","fetch","then","data","json","list","catch","err","console","log","weatherReducer","name","initialState","loading","weather","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/weatherReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { API_KEY } from \".\";\r\n\r\nexport const getCurWeatherFunc = createAsyncThunk('src/getCurWeatherFunc', (location) => {\r\n    return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`)\r\n        .then(data => data.json())\r\n        .then(data => data.list)\r\n        .catch(err => console.log(err))\r\n\r\n})\r\n\r\nconst weatherReducer = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        loading: false,\r\n        weather: [],\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getCurWeatherFunc.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\r\n            console.log(action.payload)\r\n            state.loading = false\r\n            state.weather = [action.payload]\r\n        })\r\n        builder.addCase(getCurWeatherFunc.rejected, (state) => {\r\n            state.loading = false\r\n            state.weather = []\r\n        })\r\n    }\r\n})\r\n\r\nexport default weatherReducer.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,GAAG;AAE3B,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAAC,uBAAuB,EAAGG,QAAQ,IAAK;EACrF,OAAOC,KAAK,CAAE,qDAAoDD,QAAS,uBAAsBF,OAAQ,EAAC,CAAC,CACtGI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACE,IAAI,CAAC,CACvBC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAEvC,CAAC,CAAC;AAEF,MAAMG,cAAc,GAAGd,WAAW,CAAC;EAC/Be,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACb,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,iBAAiB,CAACmB,OAAO,EAAGC,KAAK,IAAK;MAClDA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFG,OAAO,CAACC,OAAO,CAAClB,iBAAiB,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5Db,OAAO,CAACC,GAAG,CAACY,MAAM,CAACC,OAAO,CAAC;MAC3BH,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,OAAO,GAAG,CAACO,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAAClB,iBAAiB,CAACwB,QAAQ,EAAGJ,KAAK,IAAK;MACnDA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,OAAO,GAAG,EAAE;IACtB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeJ,cAAc,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}