{"ast":null,"code":"import { API_KEY } from \".\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchForecast = createAsyncThunk('ForecastWReducer/fetchForecast', location => {\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`).then(data => data.json());\n});\nconst weatherForecast = createSlice({\n  name: 'forecast',\n  initialState: {\n    loading: false,\n    forecast: [],\n    error: ''\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchForecast.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchForecast.rejected, (state, action) => {\n      state.loading = false;\n      state.forecast = [];\n      state.error = 'error';\n    });\n    builder.addCase(fetchForecast.fulfilled, (state, action) => {\n      state.loading = false;\n      state.forecast = [...action.payload.list];\n      state.error = '';\n    });\n  }\n});\nexport default weatherForecast.reducer;","map":{"version":3,"names":["API_KEY","createSlice","createAsyncThunk","fetchForecast","location","fetch","then","data","json","weatherForecast","name","initialState","loading","forecast","error","extraReducers","builder","addCase","pending","state","rejected","action","fulfilled","payload","list","reducer"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWReducer.js"],"sourcesContent":["import { API_KEY } from \".\";\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const fetchForecast = createAsyncThunk('ForecastWReducer/fetchForecast', (location) => {\r\n    return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n            .then(data => data.json())\r\n})\r\n\r\nconst weatherForecast = createSlice({\r\n    name: 'forecast',\r\n    initialState: {\r\n        loading: false,\r\n        forecast: [],\r\n        error: ''\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchForecast.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(fetchForecast.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.forecast = []\r\n            state.error = 'error'\r\n        })\r\n        builder.addCase(fetchForecast.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.forecast = [...action.payload.list]\r\n            state.error = ''\r\n        })\r\n    }\r\n})\r\n\r\nexport default weatherForecast.reducer\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,GAAG;AAC3B,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAGhE,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,CAAC,gCAAgC,EAAGE,QAAQ,IAAK;EAC1F,OAAOC,KAAK,CAAE,sDAAqDD,QAAS,uBAAsBJ,OAAQ,EAAC,CAAC,CACnGM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAGR,WAAW,CAAC;EAChCS,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,aAAa,CAACe,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACP,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACd,aAAa,CAACiB,QAAQ,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,KAAK,GAAG,OAAO;IACzB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACd,aAAa,CAACmB,SAAS,EAAE,CAACH,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,QAAQ,GAAG,CAAC,GAAGQ,MAAM,CAACE,OAAO,CAACC,IAAI,CAAC;MACzCL,KAAK,CAACL,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeL,eAAe,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}