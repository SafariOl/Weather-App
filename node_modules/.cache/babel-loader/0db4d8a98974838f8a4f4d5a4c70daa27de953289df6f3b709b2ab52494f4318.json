{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\";\nimport React from 'react';\nimport { API_KEY } from './App';\nimport { images } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather({\n  location\n}) {\n  const dayWeek = {\n    0: 'Monday',\n    1: 'Tuesday',\n    2: 'Wednesday',\n    3: 'Thursday',\n    4: 'Friday',\n    5: 'Saturday',\n    6: 'Sunday'\n  };\n  const days = document.querySelector('.days');\n  let options2 = {\n    month: \"long\"\n  };\n  let isCalled = false;\n  const getData = async () => {\n    let data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`);\n    data = await data.json();\n    if (isCalled) return;\n    isCalled = true;\n    for (let i = 0; i < data.list.length; i++) {\n      if (i % 6 == 0) {\n        console.log(data.list[i]);\n        const date = new Date(data.list[i].dt_txt);\n        let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n        days.innerHTML += `\n            <div class='day'>\n              <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n              <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\n              <div class='time'>${date.getDate()}${time}, ${dayWeek[date.getDay()]}</div>\n            </div>\n          `;\n      } else continue;\n    }\n  };\n  if (location !== '') getData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","API_KEY","images","jsxDEV","_jsxDEV","ForecastWeather","location","dayWeek","days","document","querySelector","options2","month","isCalled","getData","data","fetch","json","i","list","length","console","log","date","Date","dt_txt","time","Intl","DateTimeFormat","format","innerHTML","Math","floor","main","temp","weather","getDate","getDay","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React from 'react'\r\nimport { API_KEY } from './App'\r\nimport { images } from './App'\r\n\r\nexport default function ForecastWeather({location}) {\r\n  const dayWeek = {\r\n    0: 'Monday',\r\n    1: 'Tuesday',\r\n    2: 'Wednesday',\r\n    3: 'Thursday',\r\n    4: 'Friday',\r\n    5: 'Saturday',\r\n    6: 'Sunday'\r\n  }\r\n\r\n  const days = document.querySelector('.days')\r\n  let options2 = { month: \"long\" };\r\n  let isCalled = false;\r\n\r\n    const getData = async() => {\r\n      let data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n      data = await data.json()\r\n      if(isCalled) return;\r\n        isCalled = true\r\n      for(let i = 0; i < data.list.length; i++){\r\n        if(i % 6 == 0){\r\n          console.log(data.list[i])\r\n          const date = new Date(data.list[i].dt_txt)\r\n          let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n          days.innerHTML += `\r\n            <div class='day'>\r\n              <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n              <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\r\n              <div class='time'>${date.getDate()}${time}, ${dayWeek[date.getDay()]}</div>\r\n            </div>\r\n          `\r\n        }else continue\r\n      }\r\n    }\r\n\r\n    if(location !== '') getData()\r\n    \r\n  return (\r\n    <div>\r\n      <div className=\"days\">\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,eAAeA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAClD,MAAMC,OAAO,GAAG;IACd,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,WAAW;IACd,CAAC,EAAE,UAAU;IACb,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,UAAU;IACb,CAAC,EAAE;EACL,CAAC;EAED,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC5C,IAAIC,QAAQ,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;EAChC,IAAIC,QAAQ,GAAG,KAAK;EAElB,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;IACzB,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAE,sDAAqDV,QAAS,uBAAsBL,OAAQ,EAAC,CAAC;IACtHc,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAI,CAAC,CAAC;IACxB,IAAGJ,QAAQ,EAAE;IACXA,QAAQ,GAAG,IAAI;IACjB,KAAI,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;MACvC,IAAGA,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;QACZG,OAAO,CAACC,GAAG,CAACP,IAAI,CAACI,IAAI,CAACD,CAAC,CAAC,CAAC;QACzB,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAACT,IAAI,CAACI,IAAI,CAACD,CAAC,CAAC,CAACO,MAAM,CAAC;QAC1C,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEjB,QAAQ,CAAC,CAACkB,MAAM,CAACN,IAAI,CAAC;QAClEf,IAAI,CAACsB,SAAS,IAAK;AAC7B;AACA,kCAAkCC,IAAI,CAACC,KAAK,CAACjB,IAAI,CAACI,IAAI,CAACD,CAAC,CAAC,CAACe,IAAI,CAACC,IAAI,CAAE;AACrE,yCAAyChC,MAAM,CAACa,IAAI,CAACI,IAAI,CAACD,CAAC,CAAC,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI,CAAE;AAC9E,kCAAkCV,IAAI,CAACa,OAAO,CAAC,CAAE,GAAEV,IAAK,KAAInB,OAAO,CAACgB,IAAI,CAACc,MAAM,CAAC,CAAC,CAAE;AACnF;AACA,WAAW;MACH,CAAC,MAAK;IACR;EACF,CAAC;EAED,IAAG/B,QAAQ,KAAK,EAAE,EAAEQ,OAAO,CAAC,CAAC;EAE/B,oBACEV,OAAA;IAAAkC,QAAA,eACElC,OAAA;MAAKmC,SAAS,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GA7CuBvC,eAAe;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}