{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API_KEY } from \".\";\nexport const getCurWeatherFunc = createAsyncThunk('CurrentWeather/getCurWeatherFunc', location => {\n  return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`).then(data => data.json());\n});\nconst weatherReducer = createSlice({\n  name: 'weather',\n  initialState: {\n    loading: false,\n    weather: [],\n    error: ''\n  },\n  extraReducers: builder => {\n    builder.addCase(getCurWeatherFunc.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getCurWeatherFunc.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = [];\n      state.error = 'error';\n    });\n    builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\n      state.loading = false;\n      state.weather = [{\n        ...action.payload\n      }];\n      state.error = '';\n    });\n  }\n});\nexport default weatherReducer.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_KEY","getCurWeatherFunc","location","fetch","then","data","json","weatherReducer","name","initialState","loading","weather","error","extraReducers","builder","addCase","pending","state","rejected","action","fulfilled","payload","reducer"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/weatherReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { API_KEY } from \".\";\r\n\r\nexport const getCurWeatherFunc = createAsyncThunk('CurrentWeather/getCurWeatherFunc', (location) => {\r\n    return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`)\r\n        .then(data => data.json())\r\n})\r\n\r\nconst weatherReducer = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        loading: false,\r\n        weather: [],\r\n        error: ''\r\n    },\r\n\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getCurWeatherFunc.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getCurWeatherFunc.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.weather = []\r\n            state.error = 'error'\r\n        })\r\n        builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.weather = [{...action.payload}]\r\n            state.error = ''\r\n        })\r\n    }\r\n})\r\n\r\nexport default weatherReducer.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,GAAG;AAE3B,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAAC,kCAAkC,EAAGG,QAAQ,IAAK;EAChG,OAAOC,KAAK,CAAE,qDAAoDD,QAAS,uBAAsBF,OAAQ,EAAC,CAAC,CACtGI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGT,WAAW,CAAC;EAC/BU,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACX,CAAC;EAEDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACe,OAAO,EAAGC,KAAK,IAAK;MAClDA,KAAK,CAACP,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACiB,QAAQ,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,OAAO,GAAG,EAAE;MAClBM,KAAK,CAACL,KAAK,GAAG,OAAO;IACzB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACmB,SAAS,EAAE,CAACH,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,OAAO,GAAG,CAAC;QAAC,GAAGQ,MAAM,CAACE;MAAO,CAAC,CAAC;MACrCJ,KAAK,CAACL,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeL,cAAc,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}