{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavBlock from './NavBlock';\nimport CurrentWeather from './CurrentWeather';\nimport clouds from './img/cloud.png';\nimport rain from './img/rain.png';\nimport clear from './img/sun.png';\nimport mist from './img/mist.png';\nimport snow from './img/snow.png';\nimport ForecastWeather from './ForecastWeather';\nimport Highlights from './Highlights';\nimport HourlyWeather from './HourlyWeather';\nimport moment from 'moment';\nimport { getCurWeatherFunc } from './fetchCurrWeather';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const images = {\n  'Clouds': clouds,\n  'Haze': mist,\n  'Mist': mist,\n  'Clear': clear,\n  'Rain': rain,\n  'Snow': snow\n};\nexport default function App() {\n  _s();\n  const [temp, setTemp] = useState(0);\n  const [windDeg, setWinDeg] = useState(0);\n  const [windSpeed, setSpeed] = useState(0);\n  const [weatherName, setWeatherName] = useState('');\n  const [weather, setWeather] = useState('');\n  const [pressure, setPressure] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [visibility, setVisibility] = useState(0);\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [sunrise, setSunrise] = useState('');\n  const [sunset, setSunset] = useState('');\n  const current = {\n    location: '',\n    temp: temp,\n    weather: images[weather],\n    weatherName: weatherName\n  };\n  const highlights = {\n    sunrise: sunrise,\n    sunset: sunset,\n    windSpeed: windSpeed,\n    windDeg: windDeg,\n    humidity: humidity,\n    pressure: pressure,\n    visibility: visibility,\n    feelsLike: feelsLike\n  };\n\n  // let timezone = data.timezone\n  // setTemp(Math.floor(data.main.temp))\n  // setWeatherName(data.weather[0].description)\n  // setWeather(data.weather[0].main)\n  // setSpeed(data.wind.speed)\n  // setWinDeg(data.wind.deg)\n  // setHumidity(data.main.humidity)\n  // setVisibility(data.visibility / 1000)\n  // setPressure(data.main.pressure)\n  // setFeelsLike(Math.floor(data.main.feels_like))\n  // setSunrise(moment.utc(data.sys.sunrise,'X').add(timezone,'seconds').format('HH:mm a'))\n  // setSunset(moment.utc(data.sys.sunset,'X').add(timezone,'seconds').format('HH:mm a'))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"ERROR\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"404\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"System can't found\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), \"this location!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(NavBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cur-future\",\n        children: /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uneyyvupL68cmMyLN7sJWOCQ/eU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBlock","CurrentWeather","clouds","rain","clear","mist","snow","ForecastWeather","Highlights","HourlyWeather","moment","getCurWeatherFunc","useDispatch","useSelector","jsxDEV","_jsxDEV","images","App","_s","temp","setTemp","windDeg","setWinDeg","windSpeed","setSpeed","weatherName","setWeatherName","weather","setWeather","pressure","setPressure","humidity","setHumidity","visibility","setVisibility","feelsLike","setFeelsLike","sunrise","setSunrise","sunset","setSunset","current","location","highlights","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport NavBlock from './NavBlock'\nimport CurrentWeather from './CurrentWeather'\nimport clouds from './img/cloud.png'\nimport rain from './img/rain.png'\nimport clear from './img/sun.png'\nimport mist from './img/mist.png'\nimport snow from './img/snow.png'\nimport ForecastWeather from './ForecastWeather'\nimport Highlights from './Highlights'\nimport HourlyWeather from './HourlyWeather'\nimport moment from 'moment'\nimport { getCurWeatherFunc } from './fetchCurrWeather'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const images = {\n    'Clouds': clouds,\n    'Haze': mist,\n    'Mist': mist,\n    'Clear': clear,\n    'Rain': rain,\n    'Snow': snow,\n}\n\nexport default function App() {\n\n  const [temp, setTemp] = useState(0)\n  const [windDeg, setWinDeg] = useState(0)\n  const [windSpeed, setSpeed] = useState(0)\n  const [weatherName, setWeatherName] = useState('')\n  const [weather, setWeather] = useState('')\n  const [pressure, setPressure] = useState(0)\n  const [humidity, setHumidity] = useState(0)\n  const [visibility, setVisibility] = useState(0)\n  const [feelsLike, setFeelsLike] = useState(0)\n  const [sunrise, setSunrise] = useState('')\n  const [sunset, setSunset] = useState('')\n\n  const current = {\n    location: '',\n    temp: temp,\n    weather: images[weather],\n    weatherName: weatherName\n  }\n\n  const highlights = {\n    sunrise: sunrise,\n    sunset: sunset,\n    windSpeed: windSpeed,\n    windDeg: windDeg,\n    humidity: humidity,\n    pressure: pressure,\n    visibility: visibility,\n    feelsLike: feelsLike\n  }\n\n    // let timezone = data.timezone\n    // setTemp(Math.floor(data.main.temp))\n    // setWeatherName(data.weather[0].description)\n    // setWeather(data.weather[0].main)\n    // setSpeed(data.wind.speed)\n    // setWinDeg(data.wind.deg)\n    // setHumidity(data.main.humidity)\n    // setVisibility(data.visibility / 1000)\n    // setPressure(data.main.pressure)\n    // setFeelsLike(Math.floor(data.main.feels_like))\n    // setSunrise(moment.utc(data.sys.sunrise,'X').add(timezone,'seconds').format('HH:mm a'))\n    // setSunset(moment.utc(data.sys.sunset,'X').add(timezone,'seconds').format('HH:mm a'))\n    \n\n  return (\n    <div className='wrapper'>\n      <div className=\"error\">\n          <h1>ERROR<br/><span>404</span></h1>\n          <h2>System can't found<br/>this location!</h2>\n      </div>\n      <nav>\n        <NavBlock />\n      </nav>\n      <main>\n        <div className='cur-future'>\n            <CurrentWeather />\n            {/* <ForecastWeather location={location}/> */}\n        </div>\n        <div>\n            {/* <Highlights highlights={highlights}/>\n            <HourlyWeather location={location} /> */}\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}