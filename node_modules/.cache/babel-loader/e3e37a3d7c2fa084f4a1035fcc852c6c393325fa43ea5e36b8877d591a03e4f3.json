{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\MainBlock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport clouds from './img/cloud.png';\nimport rain from './img/rain.png';\nimport clear from './img/sun.png';\nimport mist from './img/mist.png';\nimport snow from './img/snow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'a43370d07c332057a138f54300a5a38a';\nconst images = {\n  'Clouds': clouds,\n  'Haze': mist,\n  'Mist': mist,\n  'Clear': clear,\n  'Rain': rain,\n  'Snow': snow\n};\nexport default function MainBlock() {\n  _s();\n  const [location, setLocation] = useState('');\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(data => data.json()).then(console.log);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-day\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"LOCATION\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"SEARCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MainBlock, \"UgG1hO88lpl+MuJHYDyqjwsXOSU=\");\n_c = MainBlock;\nvar _c;\n$RefreshReg$(_c, \"MainBlock\");","map":{"version":3,"names":["React","useEffect","useState","clouds","rain","clear","mist","snow","jsxDEV","_jsxDEV","API_KEY","images","MainBlock","_s","location","setLocation","handleSubmit","e","preventDefault","fetch","headers","then","data","json","console","log","className","children","onSubmit","type","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/MainBlock.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport clouds from './img/cloud.png'\r\nimport rain from './img/rain.png'\r\nimport clear from './img/sun.png'\r\nimport mist from './img/mist.png'\r\nimport snow from './img/snow.png'\r\n\r\nconst API_KEY = 'a43370d07c332057a138f54300a5a38a'\r\nconst images = {\r\n    'Clouds': clouds,\r\n    'Haze': mist,\r\n    'Mist': mist,\r\n    'Clear': clear,\r\n    'Rain': rain,\r\n    'Snow': snow,\r\n}\r\n\r\nexport default function MainBlock() {\r\n    const [location, setLocation] = useState('')\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        fetch(`api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${API_KEY}`,  \r\n        {headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }}\r\n        )\r\n    .then(data => data.json()).then(console.log)\r\n    }\r\n\r\n  return (\r\n    <div className='current-day'>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>LOCATION<input type=\"text\" onChange={e => setLocation(e.target.value)}/></label>\r\n            <button type='button' onClick={handleSubmit}>SEARCH</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,IAAI,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,MAAM,GAAG;EACX,QAAQ,EAAER,MAAM;EAChB,MAAM,EAAEG,IAAI;EACZ,MAAM,EAAEA,IAAI;EACZ,OAAO,EAAED,KAAK;EACd,MAAM,EAAED,IAAI;EACZ,MAAM,EAAEG;AACZ,CAAC;AAED,eAAe,SAASK,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,SAASc,YAAYA,CAACC,CAAC,EAAC;IACpBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAE,8CAA6CL,QAAS,UAASJ,OAAQ,EAAC,EAC/E;MAACU,OAAO,EAAG;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACX;IAAC,CACJ,CAAC,CACJC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC;EAC5C;EAEF,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBlB,OAAA;MAAMmB,QAAQ,EAAEZ,YAAa;MAAAW,QAAA,gBACzBlB,OAAA;QAAAkB,QAAA,GAAO,UAAQ,eAAAlB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEb,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACc,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvF3B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACQ,OAAO,EAAErB,YAAa;QAAAW,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CArBuBD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}