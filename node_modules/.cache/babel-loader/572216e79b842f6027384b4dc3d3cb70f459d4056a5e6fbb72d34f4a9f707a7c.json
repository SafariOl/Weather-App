{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\";\nimport React, { useEffect } from 'react';\nimport { API_KEY } from './weatherReducer';\nimport { images } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather({\n  location\n}) {\n  const days = document.querySelector('.days');\n  let options2 = {\n    month: \"long\"\n  };\n\n  // async function getNextDays() {\n  //   try{\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\n  //     const data = await res.json()\n  //     days.innerHTML = ''\n  //     let prevDay\n  //     for(let i = 0; i < data.list.length; i++){\n  //       if(i % 6 === 0){\n  //         const date = new Date(data.list[i].dt_txt)\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\n  //         let day = date.getDate()\n  //         if(day - prevDay === 1){\n  //           days.innerHTML += `\n  //             <div class='day'>\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\n  //               <div class='time'>${day} ${time}</div>\n  //             </div>\n  //           `\n  //         }\n  //         prevDay = day\n  //       }\n  //     }\n  //   }catch(err){\n  //     console.log(err)\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   getNextDays()\n  // }, [location])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","API_KEY","images","jsxDEV","_jsxDEV","ForecastWeather","location","days","document","querySelector","options2","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { API_KEY } from './weatherReducer'\r\nimport { images } from './App'\r\n\r\nexport default function ForecastWeather({location}) {\r\n  const days = document.querySelector('.days')\r\n  let options2 = { month: \"long\" };\r\n\r\n  // async function getNextDays() {\r\n  //   try{\r\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n  //     const data = await res.json()\r\n  //     days.innerHTML = ''\r\n  //     let prevDay\r\n  //     for(let i = 0; i < data.list.length; i++){\r\n  //       if(i % 6 === 0){\r\n  //         const date = new Date(data.list[i].dt_txt)\r\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n  //         let day = date.getDate()\r\n  //         if(day - prevDay === 1){\r\n  //           days.innerHTML += `\r\n  //             <div class='day'>\r\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\r\n  //               <div class='time'>${day} ${time}</div>\r\n  //             </div>\r\n  //           `\r\n  //         }\r\n  //         prevDay = day\r\n  //       }\r\n  //     }\r\n  //   }catch(err){\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   getNextDays()\r\n  // }, [location])\r\n\r\n    \r\n  return (\r\n    <div className='forecast'>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"current days\">\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,eAAeA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAClD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC5C,IAAIC,QAAQ,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;;EAEhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAGA,oBACEP,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBT,OAAA;MAAAS,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBb,OAAA;MAAKQ,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACC,EAAA,GA7CuBb,eAAe;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}