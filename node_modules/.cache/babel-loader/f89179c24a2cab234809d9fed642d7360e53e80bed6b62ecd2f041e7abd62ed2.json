{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\";\nimport React from 'react';\nimport { API_KEY } from './App';\nimport { images } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather({\n  location\n}) {\n  const getData = async () => {\n    try {\n      let res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`);\n      let data = await res.json();\n      let lat = data.coord.lat;\n      let lon = data.coord.lon;\n      console.log(data);\n      get7Days(lat, lon);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const get7Days = async (lat, lon) => {\n    let res = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=7&appid=${API_KEY}`);\n    res = await res.json();\n    console.log(res);\n  };\n  if (location !== '') getData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","API_KEY","images","jsxDEV","_jsxDEV","ForecastWeather","location","getData","res","fetch","data","json","lat","coord","lon","console","log","get7Days","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React from 'react'\r\nimport { API_KEY } from './App'\r\nimport { images } from './App'\r\n\r\nexport default function ForecastWeather({location}) {\r\n  \r\n  const getData = async () => {\r\n    try {\r\n      let res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`);\r\n      let data = await res.json();\r\n      let lat = data.coord.lat\r\n      let lon = data.coord.lon\r\n      console.log(data)\r\n      get7Days(lat, lon)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  const get7Days = async(lat, lon) => {\r\n    let res = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=7&appid=${API_KEY}`)\r\n    res = await res.json();\r\n    console.log(res)\r\n  }\r\n\r\n  if(location !== '') getData()\r\n  \r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,eAAeA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAElD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,qDAAoDH,QAAS,UAASL,OAAQ,EAAC,CAAC;MACvG,IAAIS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3B,IAAIC,GAAG,GAAGF,IAAI,CAACG,KAAK,CAACD,GAAG;MACxB,IAAIE,GAAG,GAAGJ,IAAI,CAACG,KAAK,CAACC,GAAG;MACxBC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjBO,QAAQ,CAACL,GAAG,EAAEE,GAAG,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMD,QAAQ,GAAG,MAAAA,CAAML,GAAG,EAAEE,GAAG,KAAK;IAClC,IAAIN,GAAG,GAAG,MAAMC,KAAK,CAAE,8DAA6DG,GAAI,QAAOE,GAAI,gBAAeb,OAAQ,EAAC,CAAC;IAC5HO,GAAG,GAAG,MAAMA,GAAG,CAACG,IAAI,CAAC,CAAC;IACtBI,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;EAClB,CAAC;EAED,IAAGF,QAAQ,KAAK,EAAE,EAAEC,OAAO,CAAC,CAAC;EAG7B,oBACEH,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACC,EAAA,GA7BuBlB,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}