{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { images } from './App';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather() {\n  _s();\n  let options2 = {\n    month: \"long\"\n  };\n  const weather = useSelector(state => state.weather.forecast);\n  // async function getNextDays() {\n  //   try{\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\n  //     const data = await res.json()\n  //     days.innerHTML = ''\n  //     let prevDay\n  //     for(let i = 0; i < data.list.length; i++){\n  //       if(i % 6 === 0){\n  //         const date = new Date(data.list[i].dt_txt)\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\n  //         let day = date.getDate()\n  //         if(day - prevDay === 1){\n  //           days.innerHTML += `\n  //             <div class='day'>\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\n  //               <div class='time'>${day} ${time}</div>\n  //             </div>\n  //           `\n  //         }\n  //         prevDay = day\n  //       }\n  //     }\n  if (weather.length > 0) {}\n  let prevDay;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current days\",\n      children: weather.length > 0 ? weather.map((el, idx) => {\n        if (idx % 6 == 0) {\n          console.log(el.dt_txt);\n          const date = new Date(el.dt_txt);\n          let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n          let day = date.getDate();\n          if (day - prevDay === 1) {\n            /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"day\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"temp\",\n                children: [Math.floor(el.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n                  children: [\"o\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"c\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"weather\",\n                src: images[el.weather[0].main]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"time\",\n                children: [day, \" \", time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this);\n          }\n          prevDay = day;\n        }\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastWeather, \"pQR6Xq4bk8EOimuaEsjCqhlR/2I=\", false, function () {\n  return [useSelector];\n});\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","images","useSelector","jsxDEV","_jsxDEV","ForecastWeather","_s","options2","month","weather","state","forecast","length","prevDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","idx","console","log","dt_txt","date","Date","time","Intl","DateTimeFormat","format","day","getDate","class","Math","floor","main","temp","src","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { images } from './App'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ForecastWeather() {\r\n  let options2 = { month: \"long\" };\r\n  const weather = useSelector(state => state.weather.forecast)\r\n  // async function getNextDays() {\r\n  //   try{\r\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n  //     const data = await res.json()\r\n  //     days.innerHTML = ''\r\n  //     let prevDay\r\n  //     for(let i = 0; i < data.list.length; i++){\r\n  //       if(i % 6 === 0){\r\n  //         const date = new Date(data.list[i].dt_txt)\r\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n  //         let day = date.getDate()\r\n  //         if(day - prevDay === 1){\r\n  //           days.innerHTML += `\r\n  //             <div class='day'>\r\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\r\n  //               <div class='time'>${day} ${time}</div>\r\n  //             </div>\r\n  //           `\r\n  //         }\r\n  //         prevDay = day\r\n  //       }\r\n  //     }\r\n  if(weather.length > 0){\r\n    \r\n  }\r\n\r\n  let prevDay\r\n  return (\r\n    <div className='forecast'>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"current days\">\r\n          {weather.length > 0 ? \r\n              weather.map((el, idx) => {\r\n                if(idx % 6 == 0){\r\n                  console.log(el.dt_txt)\r\n                  const date = new Date(el.dt_txt)\r\n                  let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n                  let day = date.getDate()\r\n                  if(day - prevDay === 1){\r\n                    <div class='day'>\r\n                      <div class=\"temp\">{Math.floor(el.main.temp)}<sup>o<sub>c</sub></sup></div>\r\n                      <img class=\"weather\" src={images[el.weather[0].main]}></img>\r\n                      <div class='time'>{day} {time}</div>\r\n                    </div>\r\n                  }\r\n                  prevDay = day\r\n                }\r\n            })\r\n            :\r\n            <div></div>\r\n          }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}