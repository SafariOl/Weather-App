{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { images } from './App';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather() {\n  _s();\n  const weather = useSelector(state => state.weather.forecast);\n  let options2 = {\n    month: \"long\"\n  };\n  let weatherArr = [];\n  if (weather.length > 0) {\n    let prevDay;\n    for (let i = 0; i < weather.length; i++) {\n      const date = new Date(weather[i].dt_txt);\n      let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n      let day = date.getDate();\n      if (day - prevDay === 1 || prevDay === undefined) {\n        weatherArr.push({\n          ...weather[i],\n          day: day,\n          time: time\n        });\n        console.log(weather[i]);\n        console.log(da);\n      }\n      prevDay = day;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current days\",\n      children: weatherArr.map((el, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"temp\",\n          children: [Math.floor(el.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: [\"o\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"weather\",\n          src: images[el.weather[0].main]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"time\",\n          children: [el.day, \" \", el.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastWeather, \"pQR6Xq4bk8EOimuaEsjCqhlR/2I=\", false, function () {\n  return [useSelector];\n});\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","images","useSelector","jsxDEV","_jsxDEV","ForecastWeather","_s","weather","state","forecast","options2","month","weatherArr","length","prevDay","i","date","Date","dt_txt","time","Intl","DateTimeFormat","format","day","getDate","undefined","push","console","log","da","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","idx","class","Math","floor","main","temp","src","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { images } from './App'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ForecastWeather() {\r\n  const weather = useSelector(state => state.weather.forecast)\r\n  let options2 = { month: \"long\" };\r\n  let weatherArr = []\r\n  if(weather.length > 0){\r\n    let prevDay\r\n    for(let i = 0; i < weather.length; i++){\r\n      const date = new Date(weather[i].dt_txt)\r\n      let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n      let day = date.getDate()\r\n      \r\n      if((day - prevDay === 1 || prevDay === undefined)){\r\n        weatherArr.push({...weather[i], day: day, time: time})\r\n        console.log(weather[i])\r\n        console.log(da)\r\n      }\r\n      prevDay = day\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className='forecast'>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"current days\">\r\n            {weatherArr.map((el, idx) => \r\n              <div className='day' key={idx}>\r\n                <div class=\"temp\">{Math.floor(el.main.temp)}<sup>o<sub>c</sub></sup></div>\r\n                <img class=\"weather\" src={images[el.weather[0].main]}></img>\r\n                <div class='time'>{el.day} {el.time}</div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}