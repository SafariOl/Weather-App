{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { images } from './App';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather() {\n  _s();\n  let options2 = {\n    month: \"long\"\n  };\n  const weather = useSelector(state => state.weather.forecast);\n  const getBlocks = () => {\n    const days = document.querySelector('.days');\n    let prevDay;\n    for (let i = 0; i < weather.length; i++) {\n      if (i % 6 === 0) {\n        const date = new Date(weather[i].dt_txt);\n        let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n        let day = date.getDate();\n        if (day - prevDay === 1) {\n          days.innerHTML += `\n            <div class='day'>\n              <div class=\"temp\">${Math.floor(weather[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n              <img class=\"weather\" src=${images[weather[i].weather[0].main]}></img>\n              <div class='time'>${day} ${time}</div>\n            </div>\n          `;\n        }\n        prevDay = day;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current days\",\n      children: weather.length > 0 ? getBlocks() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastWeather, \"pQR6Xq4bk8EOimuaEsjCqhlR/2I=\", false, function () {\n  return [useSelector];\n});\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","images","useSelector","jsxDEV","_jsxDEV","ForecastWeather","_s","options2","month","weather","state","forecast","getBlocks","days","document","querySelector","prevDay","i","length","date","Date","dt_txt","time","Intl","DateTimeFormat","format","day","getDate","innerHTML","Math","floor","main","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { images } from './App'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ForecastWeather() {\r\n  let options2 = { month: \"long\" };\r\n  const weather = useSelector(state => state.weather.forecast)\r\n  const getBlocks = () => {\r\n    const days = document.querySelector('.days')\r\n    let prevDay\r\n    for(let i = 0; i < weather.length; i++){\r\n      if(i % 6 === 0){\r\n        const date = new Date(weather[i].dt_txt)\r\n        let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n        let day = date.getDate()\r\n        if(day - prevDay === 1){\r\n          days.innerHTML += `\r\n            <div class='day'>\r\n              <div class=\"temp\">${Math.floor(weather[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n              <img class=\"weather\" src=${images[weather[i].weather[0].main]}></img>\r\n              <div class='time'>${day} ${time}</div>\r\n            </div>\r\n          `\r\n        }\r\n        prevDay = day\r\n      }\r\n  }}\r\n\r\n  return (\r\n    <div className='forecast'>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"current days\">\r\n          {weather.length > 0 ? getBlocks() : <div></div>}          \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,IAAIC,QAAQ,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;EAChC,MAAMC,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAO,CAACE,QAAQ,CAAC;EAC5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC5C,IAAIC,OAAO;IACX,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,OAAO,CAACS,MAAM,EAAED,CAAC,EAAE,EAAC;MACrC,IAAGA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;QACb,MAAME,IAAI,GAAG,IAAIC,IAAI,CAACX,OAAO,CAACQ,CAAC,CAAC,CAACI,MAAM,CAAC;QACxC,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEjB,QAAQ,CAAC,CAACkB,MAAM,CAACN,IAAI,CAAC;QAClE,IAAIO,GAAG,GAAGP,IAAI,CAACQ,OAAO,CAAC,CAAC;QACxB,IAAGD,GAAG,GAAGV,OAAO,KAAK,CAAC,EAAC;UACrBH,IAAI,CAACe,SAAS,IAAK;AAC7B;AACA,kCAAkCC,IAAI,CAACC,KAAK,CAACrB,OAAO,CAACQ,CAAC,CAAC,CAACc,IAAI,CAACC,IAAI,CAAE;AACnE,yCAAyC/B,MAAM,CAACQ,OAAO,CAACQ,CAAC,CAAC,CAACR,OAAO,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAE;AAC5E,kCAAkCL,GAAI,IAAGJ,IAAK;AAC9C;AACA,WAAW;QACH;QACAN,OAAO,GAAGU,GAAG;MACf;IACJ;EAAC,CAAC;EAEF,oBACEtB,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB9B,OAAA;MAAA8B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlC,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BzB,OAAO,CAACS,MAAM,GAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,gBAAGR,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChC,EAAA,CAhCuBD,eAAe;EAAA,QAErBH,WAAW;AAAA;AAAAqC,EAAA,GAFLlC,eAAe;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}