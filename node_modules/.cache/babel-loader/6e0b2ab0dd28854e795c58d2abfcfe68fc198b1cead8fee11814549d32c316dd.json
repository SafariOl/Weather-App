{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavBlock from './NavBlock';\nimport CurrentWeather from './CurrentWeather';\nimport clouds from './img/cloud.png';\nimport rain from './img/rain.png';\nimport clear from './img/sun.png';\nimport mist from './img/mist.png';\nimport snow from './img/snow.png';\nimport ForecastWeather from './ForecastWeather';\nimport Highlights from './Highlights';\nimport HourlyWeather from './HourlyWeather';\nimport moment from 'moment';\nimport { error } from 'console';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const API_KEY = 'a43370d07c332057a138f54300a5a38a';\nexport const images = {\n  'Clouds': clouds,\n  'Haze': mist,\n  'Mist': mist,\n  'Clear': clear,\n  'Rain': rain,\n  'Snow': snow\n};\nexport default function App() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [windDeg, setWinDeg] = useState(0);\n  const [windSpeed, setSpeed] = useState(0);\n  const [weatherName, setWeatherName] = useState('');\n  const [weather, setWeather] = useState('');\n  const [pressure, setPressure] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [visibility, setVisibility] = useState(0);\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [sunrise, setSunrise] = useState('');\n  const [sunset, setSunset] = useState('');\n  const getData = async () => {\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`);\n      res = await res.json();\n    } catch {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData().then(data => {\n      let timezone = data.timezone;\n      setTemp(Math.floor(data.main.temp));\n      setWeatherName(data.weather[0].description);\n      setWeather(data.weather[0].main);\n      setSpeed(data.wind.speed);\n      setWinDeg(data.wind.deg);\n      setHumidity(data.main.humidity);\n      setVisibility(data.visibility / 1000);\n      setPressure(data.main.pressure);\n      setFeelsLike(data.main.feels_like);\n      setSunrise(moment.utc(data.sys.sunrise, 'X').add(timezone, 'seconds').format('HH:mm a'));\n      setSunset(moment.utc(data.sys.sunset, 'X').add(timezone, 'seconds').format('HH:mm a'));\n    });\n  }).catch(() => console.log('404'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(NavBlock, {\n        setLocation: setLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n          location: location,\n          temp: temp,\n          weather: images[weather],\n          weatherName: weatherName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ForecastWeather, {\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Highlights, {\n          sunrise: sunrise,\n          sunset: sunset,\n          speed: windSpeed,\n          deg: windDeg,\n          humidity: humidity,\n          pressure: pressure,\n          visibility: visibility,\n          feelsLike: feelsLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HourlyWeather, {\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0XmBEomMlAgWVXpMETZcS4Zbk2g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBlock","CurrentWeather","clouds","rain","clear","mist","snow","ForecastWeather","Highlights","HourlyWeather","moment","error","jsxDEV","_jsxDEV","API_KEY","images","App","_s","location","setLocation","temp","setTemp","windDeg","setWinDeg","windSpeed","setSpeed","weatherName","setWeatherName","weather","setWeather","pressure","setPressure","humidity","setHumidity","visibility","setVisibility","feelsLike","setFeelsLike","sunrise","setSunrise","sunset","setSunset","getData","res","fetch","json","console","log","then","data","timezone","Math","floor","main","description","wind","speed","deg","feels_like","utc","sys","add","format","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport NavBlock from './NavBlock'\nimport CurrentWeather from './CurrentWeather'\nimport clouds from './img/cloud.png'\nimport rain from './img/rain.png'\nimport clear from './img/sun.png'\nimport mist from './img/mist.png'\nimport snow from './img/snow.png'\nimport ForecastWeather from './ForecastWeather'\nimport Highlights from './Highlights'\nimport HourlyWeather from './HourlyWeather'\nimport moment from 'moment'\nimport { error } from 'console'\n\nexport const API_KEY = 'a43370d07c332057a138f54300a5a38a'\nexport const images = {\n    'Clouds': clouds,\n    'Haze': mist,\n    'Mist': mist,\n    'Clear': clear,\n    'Rain': rain,\n    'Snow': snow,\n}\n\nexport default function App() {\n  const [location, setLocation] = useState('')\n  const [temp, setTemp] = useState(0)\n  const [windDeg, setWinDeg] = useState(0)\n  const [windSpeed, setSpeed] = useState(0)\n  const [weatherName, setWeatherName] = useState('')\n  const [weather, setWeather] = useState('')\n  const [pressure, setPressure] = useState(0)\n  const [humidity, setHumidity] = useState(0)\n  const [visibility, setVisibility] = useState(0)\n  const [feelsLike, setFeelsLike] = useState(0)\n  const [sunrise, setSunrise] = useState('')\n  const [sunset, setSunset] = useState('')\n  \n  const getData = async() => {\n    try{\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`)\n      res = await res.json();\n    }catch{\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getData().then(data => {\n      let timezone = data.timezone\n      setTemp(Math.floor(data.main.temp))\n      setWeatherName(data.weather[0].description)\n      setWeather(data.weather[0].main)\n      setSpeed(data.wind.speed)\n      setWinDeg(data.wind.deg)\n      setHumidity(data.main.humidity)\n      setVisibility(data.visibility / 1000)\n      setPressure(data.main.pressure)\n      setFeelsLike(data.main.feels_like)\n      setSunrise(moment.utc(data.sys.sunrise,'X').add(timezone,'seconds').format('HH:mm a'))\n      setSunset(moment.utc(data.sys.sunset,'X').add(timezone,'seconds').format('HH:mm a'))\n    })\n  })\n    \n    .catch(() => console.log('404'))\n\n  return (\n    <div className='wrapper'>\n      <nav>\n        <NavBlock setLocation={setLocation}/>\n      </nav>\n      <main>\n        <div>\n            <CurrentWeather location={location} temp={temp} weather={images[weather]} weatherName={weatherName}/>\n            <ForecastWeather location={location}/>\n        </div>\n        <div>\n            <Highlights sunrise={sunrise} sunset={sunset} speed={windSpeed} deg={windDeg} humidity={humidity} pressure={pressure} visibility={visibility} feelsLike={feelsLike}/>\n            <HourlyWeather location={location} />\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}