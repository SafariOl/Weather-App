{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\ForecastWeather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { images } from './App';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastWeather() {\n  _s();\n  const days = document.querySelector('.days');\n  let options2 = {\n    month: \"long\"\n  };\n  const weather = useSelector(state => state.weather.forecast);\n  console.log(weather);\n  // async function getNextDays() {\n  //   try{\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\n  //     const data = await res.json()\n  //     days.innerHTML = ''\n  //     let prevDay\n  //     for(let i = 0; i < data.list.length; i++){\n  //       if(i % 6 === 0){\n  //         const date = new Date(data.list[i].dt_txt)\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\n  //         let day = date.getDate()\n  //         if(day - prevDay === 1){\n  //           days.innerHTML += `\n  //             <div class='day'>\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\n  //               <div class='time'>${day} ${time}</div>\n  //             </div>\n  //           `\n  //         }\n  //         prevDay = day\n  //       }\n  //     }\n\n  let prevDay;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 Days Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current days\",\n      children: weather.map((el, idx) => {\n        if (idx % 6 == 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"day\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"temp\",\n              children: [\"$\", Math.floor(el.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: [\"o\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"c\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"weather\",\n              src: images[el.weather[0].main]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"time\",\n              children: [\"$\", day, \" $\", time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this);\n          const date = new Date(el.dt_txt);\n          let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date);\n          let day = date.getDate();\n          if (day - prevDay === 1) {\n            days.innerHTML += `\n                    \n                  `;\n          }\n          prevDay = day;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ForecastWeather, \"pQR6Xq4bk8EOimuaEsjCqhlR/2I=\", false, function () {\n  return [useSelector];\n});\n_c = ForecastWeather;\nvar _c;\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"names":["React","useEffect","images","useSelector","jsxDEV","_jsxDEV","ForecastWeather","_s","days","document","querySelector","options2","month","weather","state","forecast","console","log","prevDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","idx","class","Math","floor","main","temp","src","day","time","date","Date","dt_txt","Intl","DateTimeFormat","format","getDate","innerHTML","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWeather.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { images } from './App'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ForecastWeather() {\r\n  const days = document.querySelector('.days')\r\n  let options2 = { month: \"long\" };\r\n  const weather = useSelector(state => state.weather.forecast)\r\n  console.log(weather)\r\n  // async function getNextDays() {\r\n  //   try{\r\n  //     const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n  //     const data = await res.json()\r\n  //     days.innerHTML = ''\r\n  //     let prevDay\r\n  //     for(let i = 0; i < data.list.length; i++){\r\n  //       if(i % 6 === 0){\r\n  //         const date = new Date(data.list[i].dt_txt)\r\n  //         let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n  //         let day = date.getDate()\r\n  //         if(day - prevDay === 1){\r\n  //           days.innerHTML += `\r\n  //             <div class='day'>\r\n  //               <div class=\"temp\">${Math.floor(data.list[i].main.temp)}<sup>o<sub>c</sub></sup></div>\r\n  //               <img class=\"weather\" src=${images[data.list[i].weather[0].main]}></img>\r\n  //               <div class='time'>${day} ${time}</div>\r\n  //             </div>\r\n  //           `\r\n  //         }\r\n  //         prevDay = day\r\n  //       }\r\n  //     }\r\n\r\n  let prevDay\r\n  return (\r\n    <div className='forecast'>\r\n      <h2>5 Days Forecast</h2>\r\n        <div className=\"current days\">\r\n            {weather.map((el, idx) => {\r\n              if(idx % 6 == 0){\r\n                return (\r\n                    <div class='day'>\r\n                      <div class=\"temp\">${Math.floor(el.main.temp)}<sup>o<sub>c</sub></sup></div>\r\n                      <img class=\"weather\" src={images[el.weather[0].main]}></img>\r\n                      <div class='time'>${day} ${time}</div>\r\n                    </div>\r\n                )\r\n                const date = new Date(el.dt_txt)\r\n                let time = new Intl.DateTimeFormat(\"en-US\", options2).format(date)\r\n                let day = date.getDate()\r\n                if(day - prevDay === 1){\r\n                  days.innerHTML += `\r\n                    \r\n                  `\r\n                }\r\n                prevDay = day\r\n              }\r\n          })}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC5C,IAAIC,QAAQ,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;EAChC,MAAMC,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,OAAO,CAACE,QAAQ,CAAC;EAC5DC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIK,OAAO;EACX,oBACEb,OAAA;IAAKc,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBP,OAAO,CAACY,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;QACxB,IAAGA,GAAG,GAAG,CAAC,IAAI,CAAC,EAAC;UACd,oBACItB,OAAA;YAAKuB,KAAK,EAAC,KAAK;YAAAR,QAAA,gBACdf,OAAA;cAAKuB,KAAK,EAAC,MAAM;cAAAR,QAAA,GAAC,GAAC,EAACS,IAAI,CAACC,KAAK,CAACJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAAC,eAAC3B,OAAA;gBAAAe,QAAA,GAAK,GAAC,eAAAf,OAAA;kBAAAe,QAAA,EAAK;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3EnB,OAAA;cAAKuB,KAAK,EAAC,SAAS;cAACK,GAAG,EAAE/B,MAAM,CAACwB,EAAE,CAACb,OAAO,CAAC,CAAC,CAAC,CAACkB,IAAI;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5DnB,OAAA;cAAKuB,KAAK,EAAC,MAAM;cAAAR,QAAA,GAAC,GAAC,EAACc,GAAG,EAAC,IAAE,EAACC,IAAI;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;UAEV,MAAMY,IAAI,GAAG,IAAIC,IAAI,CAACX,EAAE,CAACY,MAAM,CAAC;UAChC,IAAIH,IAAI,GAAG,IAAII,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE7B,QAAQ,CAAC,CAAC8B,MAAM,CAACL,IAAI,CAAC;UAClE,IAAIF,GAAG,GAAGE,IAAI,CAACM,OAAO,CAAC,CAAC;UACxB,IAAGR,GAAG,GAAGhB,OAAO,KAAK,CAAC,EAAC;YACrBV,IAAI,CAACmC,SAAS,IAAK;AACrC;AACA,mBAAmB;UACH;UACAzB,OAAO,GAAGgB,GAAG;QACf;MACJ,CAAC;IAAC;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACjB,EAAA,CAzDuBD,eAAe;EAAA,QAGrBH,WAAW;AAAA;AAAAyC,EAAA,GAHLtC,eAAe;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}