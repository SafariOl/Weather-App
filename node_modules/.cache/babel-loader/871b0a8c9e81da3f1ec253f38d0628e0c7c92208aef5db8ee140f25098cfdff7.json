{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavBlock from './NavBlock';\nimport CurrentWeather from './CurrentWeather';\nimport clouds from './img/cloud.png';\nimport rain from './img/rain.png';\nimport clear from './img/sun.png';\nimport mist from './img/mist.png';\nimport snow from './img/snow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'a43370d07c332057a138f54300a5a38a';\nexport default function App() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [temp, setTemp] = useState(0);\n  const [windDeg, setWinDeg] = useState(0);\n  const [windSpeed, setSpeed] = useState(0);\n  const [windGust, setGust] = useState(0);\n  const [weather, setWeather] = useState('');\n  const [pressure, setPressure] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [visibility, setVisibility] = useState(0);\n  const [feelsLike, setFeelsLike] = useState(0);\n  let sunrise, sunset;\n  if (location !== '') {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`).then(data => data.json()).then(data => {\n      setTemp(Math.floor(data.main.temp));\n      setWeather(data.weather[0].description);\n      setSpeed(data.wind.speed);\n      setWinDeg(data.wind.deg);\n      setGust(data.wind.gust);\n      setHumidity(data.main.humidity);\n      setVisibility(data.visibility / 1000);\n      setPressure(data.main.pressure);\n      setFeelsLike(data.main.feels_like);\n    }).catch(() => console.log('404'));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(NavBlock, {\n        setLocation: setLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        location: location,\n        temp: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CuITJxQ6qqeVJ1rSnhEeNoteWcs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBlock","CurrentWeather","clouds","rain","clear","mist","snow","jsxDEV","_jsxDEV","API_KEY","App","_s","location","setLocation","temp","setTemp","windDeg","setWinDeg","windSpeed","setSpeed","windGust","setGust","weather","setWeather","pressure","setPressure","humidity","setHumidity","visibility","setVisibility","feelsLike","setFeelsLike","sunrise","sunset","fetch","then","data","json","Math","floor","main","description","wind","speed","deg","gust","feels_like","catch","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport NavBlock from './NavBlock'\nimport CurrentWeather from './CurrentWeather'\nimport clouds from './img/cloud.png'\nimport rain from './img/rain.png'\nimport clear from './img/sun.png'\nimport mist from './img/mist.png'\nimport snow from './img/snow.png'\n\nconst API_KEY = 'a43370d07c332057a138f54300a5a38a'\n\n\nexport default function App() {\n  const [location, setLocation] = useState('')\n  const [temp, setTemp] = useState(0)\n  const [windDeg, setWinDeg] = useState(0)\n  const [windSpeed, setSpeed] = useState(0)\n  const [windGust, setGust] = useState(0)\n  const [weather, setWeather] = useState('')\n  const [pressure, setPressure] = useState(0)\n  const [humidity, setHumidity] = useState(0)\n  const [visibility, setVisibility] = useState(0)\n  const [feelsLike, setFeelsLike] = useState(0)\n  let sunrise, sunset\n  if(location !== ''){\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`)\n    .then(data=> data.json())\n    .then(data => {\n      setTemp(Math.floor(data.main.temp))\n      setWeather(data.weather[0].description)\n      setSpeed(data.wind.speed)\n      setWinDeg(data.wind.deg)\n      setGust(data.wind.gust)\n      setHumidity(data.main.humidity)\n      setVisibility(data.visibility / 1000)\n      setPressure(data.main.pressure)\n      setFeelsLike(data.main.feels_like)\n    })\n    .catch(() => console.log('404'))\n  }\n  return (\n    <div className='wrapper'>\n      <nav>\n        <NavBlock setLocation={setLocation}/>\n      </nav>\n      <main>\n        <CurrentWeather location={location} temp={temp}/>\n      </main>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}