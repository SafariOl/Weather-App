{"ast":null,"code":"import { API_KEY } from \".\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchForecast = createAsyncThunk('src/fetchForecast', location => {\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`).then(data => data.json()).then(data => data.list).catch(err => console.log(err));\n});\nconst weatherForecast = createSlice({\n  name: 'forecast',\n  initialState: {\n    loading: false,\n    forecast: []\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchForecast.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchForecast.fulfilled, (state, action) => {\n      console.log(action.payload);\n      if (action.payload == undefined) {\n        state.forecast = [];\n      }\n      state.loading = false;\n      state.forecast = action.payload;\n    });\n    builder.addCase(fetchForecast.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport default weatherForecast.reducer;","map":{"version":3,"names":["API_KEY","createSlice","createAsyncThunk","fetchForecast","location","fetch","then","data","json","list","catch","err","console","log","weatherForecast","name","initialState","loading","forecast","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","undefined","rejected","reducer"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/ForecastWReducer.js"],"sourcesContent":["import { API_KEY } from \".\";\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const fetchForecast = createAsyncThunk('src/fetchForecast', (location) => {\r\n    return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${API_KEY}`)\r\n            .then(data => data.json())\r\n            .then(data => data.list)\r\n            .catch(err => console.log(err))\r\n})\r\n\r\nconst weatherForecast = createSlice({\r\n    name: 'forecast',\r\n    initialState: {\r\n        loading: false,\r\n        forecast: [],\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchForecast.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(fetchForecast.fulfilled, (state, action) => {\r\n            console.log(action.payload)\r\n            if(action.payload == undefined){\r\n                state.forecast = []\r\n            }\r\n            state.loading = false\r\n            state.forecast = action.payload\r\n        })\r\n        builder.addCase(fetchForecast.rejected, (state) => {\r\n            state.loading = false\r\n        })\r\n    }\r\n})\r\n\r\nexport default weatherForecast.reducer\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,GAAG;AAC3B,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAGhE,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,CAAC,mBAAmB,EAAGE,QAAQ,IAAK;EAC7E,OAAOC,KAAK,CAAE,sDAAqDD,QAAS,uBAAsBJ,OAAQ,EAAC,CAAC,CACnGM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACE,IAAI,CAAC,CACvBC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,MAAMG,eAAe,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACd,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,aAAa,CAACmB,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFG,OAAO,CAACC,OAAO,CAAClB,aAAa,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxDb,OAAO,CAACC,GAAG,CAACY,MAAM,CAACC,OAAO,CAAC;MAC3B,IAAGD,MAAM,CAACC,OAAO,IAAIC,SAAS,EAAC;QAC3BJ,KAAK,CAACL,QAAQ,GAAG,EAAE;MACvB;MACAK,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAAClB,aAAa,CAACyB,QAAQ,EAAGL,KAAK,IAAK;MAC/CA,KAAK,CAACN,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeH,eAAe,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}