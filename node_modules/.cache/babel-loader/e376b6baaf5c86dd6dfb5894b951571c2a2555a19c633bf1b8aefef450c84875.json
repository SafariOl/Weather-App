{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yurii\\\\OneDrive\\\\Pulpit\\\\weather-app\\\\src\\\\HourlyWeather.jsx\";\nimport React, { useLayoutEffect } from 'react';\nimport { images } from './App';\nimport { API_KEY } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HourlyWeather({\n  location\n}) {\n  let items = [];\n  if (location) fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&cnt=9&appid=${API_KEY}`).then(data => data.json()).then(data => {\n    for (let i = 0; i < data.list.length; i++) {\n      const date = new Date(data.list[i].dt_txt);\n      let item = {\n        temp: Math.floor(data.list[i].main.temp),\n        weather: images[data.list[i].weather[0].main],\n        date: date.toLocaleTimeString('en-US')\n      };\n      items.push(item);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today At\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hours__block\",\n      children: items.map((el, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hour\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: el.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weather\",\n          src: el.weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: el.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = HourlyWeather;\nvar _c;\n$RefreshReg$(_c, \"HourlyWeather\");","map":{"version":3,"names":["React","useLayoutEffect","images","API_KEY","jsxDEV","_jsxDEV","HourlyWeather","location","items","fetch","then","data","json","i","list","length","date","Date","dt_txt","item","temp","Math","floor","main","weather","toLocaleTimeString","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","idx","src","_c","$RefreshReg$"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/HourlyWeather.jsx"],"sourcesContent":["import React, { useLayoutEffect } from 'react'\r\nimport { images } from './App'\r\nimport { API_KEY } from './App'\r\n\r\nexport default function HourlyWeather({location}) {\r\n  let items = []\r\n  if(location)\r\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&cnt=9&appid=${API_KEY}`)\r\n    .then(data => data.json()).then(data => {\r\n      for(let i = 0; i < data.list.length; i++){\r\n        const date = new Date(data.list[i].dt_txt)\r\n        let item = {\r\n          temp: Math.floor(data.list[i].main.temp),\r\n          weather: images[data.list[i].weather[0].main],\r\n          date: date.toLocaleTimeString('en-US')\r\n        }\r\n        items.push(item)\r\n      }\r\n    })\r\n\r\n  return (\r\n    <div className='hourly'>\r\n        <h2>Today At</h2>\r\n        <div className=\"hours__block\">\r\n          {items.map((el, idx) => (\r\n            <div key={idx} className='hour'>\r\n                <div className=\"time\">{el.date}</div>\r\n                <img className=\"weather\" src={el.weather}></img>\r\n                <div className=\"temp\">{el.temp}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,eAAe,QAAQ,OAAO;AAC9C,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,aAAaA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAChD,IAAIC,KAAK,GAAG,EAAE;EACd,IAAGD,QAAQ,EACTE,KAAK,CAAE,sDAAqDF,QAAS,6BAA4BJ,OAAQ,EAAC,CAAC,CAC1GO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACC,IAAI,IAAI;IACtC,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;MACvC,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACN,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACK,MAAM,CAAC;MAC1C,IAAIC,IAAI,GAAG;QACTC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACX,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACU,IAAI,CAACH,IAAI,CAAC;QACxCI,OAAO,EAAEtB,MAAM,CAACS,IAAI,CAACG,IAAI,CAACD,CAAC,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC;QAC7CP,IAAI,EAAEA,IAAI,CAACS,kBAAkB,CAAC,OAAO;MACvC,CAAC;MACDjB,KAAK,CAACkB,IAAI,CAACP,IAAI,CAAC;IAClB;EACF,CAAC,CAAC;EAEJ,oBACEd,OAAA;IAAKsB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BpB,KAAK,CAACyB,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,kBACjB9B,OAAA;QAAesB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC3BvB,OAAA;UAAKsB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEM,EAAE,CAAClB;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrC3B,OAAA;UAAKsB,SAAS,EAAC,SAAS;UAACS,GAAG,EAAEF,EAAE,CAACV;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChD3B,OAAA;UAAKsB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEM,EAAE,CAACd;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAH/BG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACK,EAAA,GA9BuB/B,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}