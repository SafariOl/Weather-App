{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getCurWeatherFunc } from \"./CurrentWeather/fetchCurrWeather\";\nimport { fetchForecast } from \"./ForecastWeather/ForecastReducerFetch\";\nimport { getHourlyWeatherFunc } from \"./HourlyWeather/fetchHourluWeather\";\nexport const API_KEY = 'a43370d07c332057a138f54300a5a38a';\nconst weatherReducer = createSlice({\n  name: 'weather',\n  initialState: {\n    loading: false,\n    weather: [],\n    forecast: [],\n    hourly: [],\n    error: ''\n  },\n  // reducers:{\n  //     getForecastWeather (state, action) {\n  //         state.forecast = [...action.payload.list]\n  //     },\n  //     getHourlyWeather (state, action) {\n  //         state.hourly = [...action.payload.list]\n  //     },\n  //     isFetchError (state, action) {\n  //         state.isError = action.payload;\n  //     }\n  // },\n  extraReducers: builder => {\n    builder.addCase(getCurWeatherFunc.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\n      state.loading = false;\n      state.weather = [{\n        ...action.payload\n      }];\n      state.error = '';\n    });\n    builder.addCase(getCurWeatherFunc.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = [];\n      state.error = action.error.message;\n    });\n    builder.addCase(fetchForecast.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchForecast.fulfilled, (state, action) => {\n      state.loading = false;\n      state.forecast = [...action.payload.list];\n      state.error = '';\n    });\n    builder.addCase(fetchForecast.rejected, (state, action) => {\n      state.loading = false;\n      state.forecast = [];\n      state.error = action.error.message;\n    });\n    builder.addCase(getHourlyWeatherFunc.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getHourlyWeatherFunc.fulfilled, (state, action) => {\n      state.loading = false;\n      state.hourly = [...action.payload.list];\n      state.error = '';\n    });\n    builder.addCase(getHourlyWeatherFunc.rejected, (state, action) => {\n      state.loading = false;\n      state.hourly = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default weatherReducer.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getCurWeatherFunc","fetchForecast","getHourlyWeatherFunc","API_KEY","weatherReducer","name","initialState","loading","weather","forecast","hourly","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","list","reducer"],"sources":["C:/Users/yurii/OneDrive/Pulpit/weather-app/src/weatherReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCurWeatherFunc } from \"./CurrentWeather/fetchCurrWeather\";\r\nimport { fetchForecast } from \"./ForecastWeather/ForecastReducerFetch\";\r\nimport { getHourlyWeatherFunc } from \"./HourlyWeather/fetchHourluWeather\";\r\nexport const API_KEY = 'a43370d07c332057a138f54300a5a38a'\r\n\r\nconst weatherReducer = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        loading: false,\r\n        weather: [],\r\n        forecast: [],\r\n        hourly: [],\r\n        error: ''\r\n    },\r\n    // reducers:{\r\n    //     getForecastWeather (state, action) {\r\n    //         state.forecast = [...action.payload.list]\r\n    //     },\r\n    //     getHourlyWeather (state, action) {\r\n    //         state.hourly = [...action.payload.list]\r\n    //     },\r\n    //     isFetchError (state, action) {\r\n    //         state.isError = action.payload;\r\n    //     }\r\n    // },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getCurWeatherFunc.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getCurWeatherFunc.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.weather = [{...action.payload}]\r\n            state.error = ''\r\n        })\r\n        builder.addCase(getCurWeatherFunc.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.weather = []\r\n            state.error = action.error.message\r\n        })\r\n\r\n\r\n        builder.addCase(fetchForecast.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(fetchForecast.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.forecast = [...action.payload.list]\r\n            state.error = ''\r\n        })\r\n        builder.addCase(fetchForecast.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.forecast = []\r\n            state.error = action.error.message\r\n        })\r\n\r\n        builder.addCase(getHourlyWeatherFunc.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getHourlyWeatherFunc.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.hourly = [...action.payload.list]\r\n            state.error = ''\r\n        })\r\n        builder.addCase(getHourlyWeatherFunc.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.hourly = []\r\n            state.error = action.error.message\r\n        })\r\n    }\r\n})\r\n\r\nexport default weatherReducer.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}